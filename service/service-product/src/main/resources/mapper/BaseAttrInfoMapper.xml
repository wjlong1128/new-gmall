<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        SYSTEM
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wjl.gmall.product.mapper.BaseAttrInfoMapper">

    <resultMap id="baseInfoMap" type="com.wjl.gmall.product.model.entity.BaseAttrInfo" autoMapping="true">
        <id column="id" property="id"/>

        <!--<result property="attrName" column="attr_name"/>-->
        <!--<result property="categoryId" column="category_id"/>-->
        <!--<result property="categoryLevel" column="category_level"/>-->

        <collection property="attrValueList" ofType="com.wjl.gmall.product.model.entity.BaseAttrValue">
            <id property="id" column="attr_value_id"/>
            <result property="valueName" column="value_name"/>
            <result property="attrId" column="attr_id"/>
        </collection>
    </resultMap>

    <select id="getAttrInfoList" resultMap="baseInfoMap">
        select
            info.id,
            info.attr_name,
            info.category_id,
            info.category_level,
            val.id attr_value_id,
            val.value_name,
            val.attr_id
        from
            `base_attr_info` info
        inner join
            `base_attr_value` val
        on
            val.attr_id = info.id
        <where>
            <if test="category1Id != null and category1Id != 0">
                (info.category_level = 1 AND info.category_id = #{category1Id})
            </if>
            <if test="category2Id != null and category2Id != 0">
                or
                (info.category_level = 2 AND info.category_id = #{category2Id})
            </if>
            <if test="category3Id != null and category3Id != 0">
                or
                (info.category_level = 3 AND info.category_id = #{category3Id})
            </if>
            order by
                info.category_level,info.id
        </where>

    </select>
    <!--
            select
            b.id,
            b.attr_name,
            b.category_id,
            b.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
        from
            sku_attr_value sav
        join
            base_attr_info b
        on
            sav.attr_id = b.id
        join
            base_attr_value bav
        on
            b.id = bav.attr_id and sav.value_id = bav.id
        where
            sav.sku_id = #{skuId}
        order by b.id
    -->
    <select id="getAttrListBySkuId" resultMap="baseInfoMap">
        SELECT
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
        FROM
            base_attr_info bai
        INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
        INNER JOIN sku_attr_value sav ON sav.value_id = bav.id
        WHERE
            sav.sku_id = #{skuId}
        order by
            bai.id

    </select>
</mapper>